CREATE TABLE IF NOT EXISTS users (
	user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_email VARCHAR (255) NOT NULL,
	user_login VARCHAR (255) NOT NULL,
	user_name VARCHAR (255) NOT NULL,
	user_birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
	film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_name VARCHAR (255) NOT NULL,
	description VARCHAR (255) NOT NULL,
	release_date DATE NOT NULL,
	duration INTEGER NOT NULL,
	rating_id VARCHAR (8)
);

CREATE TABLE IF NOT EXISTS friends (
	user_id INTEGER NOT NULL,
	friend_id INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
	user_id INTEGER NOT NULL PRIMARY KEY,
	film_id INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS rating (
	rating_id INTEGER NOT NULL PRIMARY KEY,
	rating_name VARCHAR
);

CREATE TABLE IF NOT EXISTS genres (
	genre_id INTEGER NOT NULL PRIMARY KEY,
	genre_name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS films_genres(
	film_id INTEGER NOT NULL,
	genre_id INTEGER NOT NULL
);

ALTER TABLE LIKES ADD CONSTRAINT LIKES_USER_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE;
ALTER TABLE LIKES ADD CONSTRAINT LIKES_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID);
ALTER TABLE likes ADD CONSTRAINT IF NOT EXISTS likes_unique UNIQUE(film_id, user_id);

ALTER TABLE FRIENDS ADD CONSTRAINT FRIENDS_USER_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID);
ALTER TABLE FRIENDS ADD CONSTRAINT FRIENDS_FRIEND_FK FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID);
ALTER TABLE FRIENDS ADD CONSTRAINT IF NOT EXISTS user_friends_key_unique UNIQUE(user_id,friend_id);

ALTER TABLE FILMS ADD CONSTRAINT FILMS_RATING_FK FOREIGN KEY (RATING_ID) REFERENCES RATING(RATING_ID) ON DELETE CASCADE;

ALTER TABLE films_genres ADD CONSTRAINT FILMS_FK FOREIGN KEY (film_id) REFERENCES FILMS(film_id);
ALTER TABLE films_genres ADD CONSTRAINT GENRES_FK FOREIGN KEY (genre_id) REFERENCES GENRES(genre_id);
ALTER TABLE films_genres ADD CONSTRAINT IF NOT EXISTS films_genres_unique UNIQUE(film_id, genre_id);
